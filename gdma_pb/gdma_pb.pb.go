// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gdma_pb.proto

package gdma_pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GDMARequest struct {
	Sources              []string `protobuf:"bytes,1,rep,name=sources,proto3" json:"sources,omitempty"`
	Destinations         []string `protobuf:"bytes,2,rep,name=destinations,proto3" json:"destinations,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GDMARequest) Reset()         { *m = GDMARequest{} }
func (m *GDMARequest) String() string { return proto.CompactTextString(m) }
func (*GDMARequest) ProtoMessage()    {}
func (*GDMARequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_gdma_pb_6e14832b3101ae57, []int{0}
}
func (m *GDMARequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GDMARequest.Unmarshal(m, b)
}
func (m *GDMARequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GDMARequest.Marshal(b, m, deterministic)
}
func (dst *GDMARequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GDMARequest.Merge(dst, src)
}
func (m *GDMARequest) XXX_Size() int {
	return xxx_messageInfo_GDMARequest.Size(m)
}
func (m *GDMARequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GDMARequest.DiscardUnknown(m)
}

var xxx_messageInfo_GDMARequest proto.InternalMessageInfo

func (m *GDMARequest) GetSources() []string {
	if m != nil {
		return m.Sources
	}
	return nil
}

func (m *GDMARequest) GetDestinations() []string {
	if m != nil {
		return m.Destinations
	}
	return nil
}

type GDMAResponse struct {
	R1                   []string `protobuf:"bytes,1,rep,name=r1,proto3" json:"r1,omitempty"`
	R2                   []string `protobuf:"bytes,2,rep,name=r2,proto3" json:"r2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GDMAResponse) Reset()         { *m = GDMAResponse{} }
func (m *GDMAResponse) String() string { return proto.CompactTextString(m) }
func (*GDMAResponse) ProtoMessage()    {}
func (*GDMAResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_gdma_pb_6e14832b3101ae57, []int{1}
}
func (m *GDMAResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GDMAResponse.Unmarshal(m, b)
}
func (m *GDMAResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GDMAResponse.Marshal(b, m, deterministic)
}
func (dst *GDMAResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GDMAResponse.Merge(dst, src)
}
func (m *GDMAResponse) XXX_Size() int {
	return xxx_messageInfo_GDMAResponse.Size(m)
}
func (m *GDMAResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GDMAResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GDMAResponse proto.InternalMessageInfo

func (m *GDMAResponse) GetR1() []string {
	if m != nil {
		return m.R1
	}
	return nil
}

func (m *GDMAResponse) GetR2() []string {
	if m != nil {
		return m.R2
	}
	return nil
}

func init() {
	proto.RegisterType((*GDMARequest)(nil), "gdma_pb.GDMARequest")
	proto.RegisterType((*GDMAResponse)(nil), "gdma_pb.GDMAResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GDMAClient is the client API for GDMA service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GDMAClient interface {
	// Get Distance using GDMA
	GetDistance(ctx context.Context, in *GDMARequest, opts ...grpc.CallOption) (*GDMAResponse, error)
}

type gDMAClient struct {
	cc *grpc.ClientConn
}

func NewGDMAClient(cc *grpc.ClientConn) GDMAClient {
	return &gDMAClient{cc}
}

func (c *gDMAClient) GetDistance(ctx context.Context, in *GDMARequest, opts ...grpc.CallOption) (*GDMAResponse, error) {
	out := new(GDMAResponse)
	err := c.cc.Invoke(ctx, "/gdma_pb.GDMA/GetDistance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GDMAServer is the server API for GDMA service.
type GDMAServer interface {
	// Get Distance using GDMA
	GetDistance(context.Context, *GDMARequest) (*GDMAResponse, error)
}

func RegisterGDMAServer(s *grpc.Server, srv GDMAServer) {
	s.RegisterService(&_GDMA_serviceDesc, srv)
}

func _GDMA_GetDistance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GDMARequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GDMAServer).GetDistance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gdma_pb.GDMA/GetDistance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GDMAServer).GetDistance(ctx, req.(*GDMARequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GDMA_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gdma_pb.GDMA",
	HandlerType: (*GDMAServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetDistance",
			Handler:    _GDMA_GetDistance_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "gdma_pb.proto",
}

func init() { proto.RegisterFile("gdma_pb.proto", fileDescriptor_gdma_pb_6e14832b3101ae57) }

var fileDescriptor_gdma_pb_6e14832b3101ae57 = []byte{
	// 196 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4d, 0x4f, 0xc9, 0x4d,
	0x8c, 0x2f, 0x48, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x87, 0x72, 0x95, 0xbc, 0xb9,
	0xb8, 0xdd, 0x5d, 0x7c, 0x1d, 0x83, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0x24, 0xb8, 0xd8,
	0x8b, 0xf3, 0x4b, 0x8b, 0x92, 0x53, 0x8b, 0x25, 0x18, 0x15, 0x98, 0x35, 0x38, 0x83, 0x60, 0x5c,
	0x21, 0x25, 0x2e, 0x9e, 0x94, 0xd4, 0xe2, 0x92, 0xcc, 0xbc, 0xc4, 0x92, 0xcc, 0xfc, 0xbc, 0x62,
	0x09, 0x26, 0xb0, 0x34, 0x8a, 0x98, 0x92, 0x1e, 0x17, 0x0f, 0xc4, 0xb0, 0xe2, 0x82, 0xfc, 0xbc,
	0xe2, 0x54, 0x21, 0x3e, 0x2e, 0xa6, 0x22, 0x43, 0xa8, 0x41, 0x4c, 0x45, 0x86, 0x60, 0xbe, 0x11,
	0x54, 0x27, 0x53, 0x91, 0x91, 0x91, 0x0b, 0x17, 0x0b, 0x48, 0xbd, 0x90, 0x0d, 0x17, 0xb7, 0x7b,
	0x6a, 0x89, 0x4b, 0x66, 0x71, 0x49, 0x62, 0x5e, 0x72, 0xaa, 0x90, 0x88, 0x1e, 0xcc, 0xb1, 0x48,
	0x4e, 0x93, 0x12, 0x45, 0x13, 0x85, 0xd8, 0xa1, 0xc4, 0xe0, 0x24, 0xc7, 0x25, 0x94, 0x99, 0xa7,
	0x57, 0x9c, 0x58, 0x94, 0x98, 0x57, 0x9c, 0x01, 0x53, 0xe4, 0xc4, 0x06, 0x52, 0x15, 0xe0, 0x14,
	0xc0, 0x98, 0xc4, 0x06, 0xf6, 0xb2, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x48, 0x1f, 0xd8, 0xad,
	0x03, 0x01, 0x00, 0x00,
}
